## This workflows will upload a Python Package using Twine when a release is created
## For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

#name: Upload Python Package
#
#on:
#  [push, pull_request]
#
#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python
#      uses: actions/setup-python@v2
#      with:
#        python-version: '3.x'
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install setuptools wheel twine
#    - name: Build and publish
#      env:
#        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
#        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
#      run: |
#        python setup.py sdist
#        twine upload dist/*
#

name: Upload to pypi

on: [ push, pull_request ]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: setup
        run: |
          mkdir pkg
          touch pkg/transformer-embedder.whl
          touch pkg/transformer-embedder.whl.asc
          touch pkg/transformer-embedder.tar.gz
      - id: action
        uses: ./.github/..
        with:
          password: ${{ secrets.TEST_TOKEN }}
          check: false
          upload: false
          dist_dir: pkg
          url: https://test.pypi.org
      - name: test
        run: |
          [[ ${{ steps.action.outputs.whl }} == transformer-embedder.whl ]]
          [[ ${{ steps.action.outputs.whl_asc }} == transformer-embedder.whl.asc ]]
          [[ ${{ steps.action.outputs.targz }} == transformer-embedder.tar.gz ]]
          [[ -z "${{ steps.action.outputs.targz_asc }}" ]]
